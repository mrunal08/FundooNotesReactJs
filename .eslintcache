[{"C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\index.js":"1","C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\reportWebVitals.js":"2","C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\App.js":"3","C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\pages\\SignIn\\SignIn.jsx":"4","C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\pages\\Reset-Password\\ResetPassword.jsx":"5","C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\pages\\Forgot-Password\\forgotPassword.jsx":"6","C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\pages\\SignUp\\signup.jsx":"7","C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\components\\DashBoard\\DashBoard.jsx":"8","C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\Services\\userServices.js":"9","C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\components\\addNote\\addNote.jsx":"10","C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\components\\Notes\\notes.jsx":"11","C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\components\\AppBar\\AppBar.jsx":"12","C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\components\\DisplayNotes\\DisplayNote.jsx":"13","C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\components\\DisplayIcons\\DisplayIcons.jsx":"14","C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\components\\SideBar\\SideBar.jsx":"15"},{"size":453,"mtime":1663217818896,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1663217818938,"results":"18","hashOfConfig":"17"},{"size":889,"mtime":1663218200021,"results":"19","hashOfConfig":"17"},{"size":6151,"mtime":1663217819737,"results":"20","hashOfConfig":"17"},{"size":5641,"mtime":1663217819667,"results":"21","hashOfConfig":"17"},{"size":4741,"mtime":1663217819618,"results":"22","hashOfConfig":"17"},{"size":14290,"mtime":1663217819827,"results":"23","hashOfConfig":"17"},{"size":417,"mtime":1663218345228,"results":"24","hashOfConfig":"17"},{"size":3320,"mtime":1663218226231,"results":"25","hashOfConfig":"17"},{"size":4332,"mtime":1663218823994,"results":"26","hashOfConfig":"17"},{"size":782,"mtime":1663217819393,"results":"27","hashOfConfig":"17"},{"size":3584,"mtime":1663218299165,"results":"28","hashOfConfig":"17"},{"size":2380,"mtime":1663218437323,"results":"29","hashOfConfig":"17"},{"size":3461,"mtime":1663218865603,"results":"30","hashOfConfig":"17"},{"size":4755,"mtime":1663218712702,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1tc8p67",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\index.js",[],["68","69"],"C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\reportWebVitals.js",[],"C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\App.js",[],"C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\pages\\SignIn\\SignIn.jsx",["70","71","72","73","74"],"import React, { Component } from 'react';\nimport \"./signin.css\";\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { Card } from '@material-ui/core';\nimport { login } from \"../../Services/userServices\"\n\nclass signin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      emailError: \"\",\n      emailFlag: false,\n      passwordError: \"\",\n      passwordFlag: false,\n      \n    };\n  }\n\n  change = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  validate = () => {\n    let isError = false;\n    const errors = {\n      emailError: \"\",\n      emailFlag: false,\n      passwordError: \"\",\n      passwordFlag: false,\n    };\n\n    if (this.state.email.length == 0) {\n      errors.emailFlag = true;\n      isError = true;\n      errors.emailError = \"Enter your Email \";\n    }\n    if (!/[a-zA-Z0-9._]+[@]{1}[a-zA-Z120-9]*[.]{1}[a-zA-Z]*$/.test(this.state.email)) {\n      errors.emailFlag = true;\n      isError = true;\n      errors.emailError = \"Please Enter Correct Email\";\n    }\n    if (this.state.password.length == 0) {\n      errors.passwordFlag = true;\n      isError = true;\n      errors.passwordError = \"Enter Password\";\n    }\n\n    this.setState({\n      ...errors,\n    });\n\n    return isError;\n  };\n  \n  \n\n \n  onSubmit = (event) => {\n    event.preventDefault();\n    const err = this.validate();\n    if (!err) {\n      this.setState({\n        email: \"\",\n        emailFlag: false,\n        emailError: \"\",\n        password: \"\",\n        passwordFlag: false,\n        passwordError: \"\",\n      });\n      \n      let loginData = {\n        \n        email: this.state.email,\n        password: this.state.password,\n        \n      };\n\n      console.log('loginData : ',loginData)\n      login (loginData).then((data)=>{\n        console.log(data);\n        localStorage.setItem('token',data.data.token)\n        alert('Login Successfull')\n      })\n      .catch ((error)=>{\n        console.log(error)\n        alert('Login failed')\n      })\n     \n    }\n  };\n\n\n  render() {\n    return (\n      <div className=\"wrapper-tool\">\n        <Card id='form'>\n          <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className=\"paper\">\n              <br>\n              </br>\n              <Typography component=\"h1\" variant=\"h5\" className=\"fundooShift\">\n              <span style={{ color: \"#0606f8\"}}>F</span>\n              <span style={{ color: \"#d10303\" }}>u</span>\n              <span style={{ color: \"#f0b000\" }}>n</span>\n              <span style={{ color: \"#0606f8\" }}>d</span>\n              <span style={{ color: \"green\" }}>o</span>\n              <span style={{ color: \"#d10303\" }}>o</span>\n              </Typography>\n              <Typography component=\"h1\" variant=\"h5\" className=\"head\">\n              <span style={{ color: \"#0606f8\"}}>Sign In</span>\n              </Typography>\n              <form className=\"form\">\n                <Grid>\n\n                  <Grid>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      id=\"email\"\n                      label=\"Enter Email Address :\"\n                      name=\"email\"\n                      autoComplete=\"email\"\n                      value={this.state.email}\n                      helperText={this.state.emailError}\n                      error={this.state.emailFlag}\n                      onChange={(e) => this.change(e)}\n                     \n                    />\n                  </Grid>\n                  <br>\n                  </br>\n                  <Grid>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      id=\"password\"\n                      label=\"Enter Password :\"\n                      name=\"password\"\n                      autoComplete=\"current-password\"\n                      value={this.state.password}\n                      onChange={(e) => this.change(e)}\n                      error={this.state.passwordFlag}\n                      helperText={this.state.passwordError}\n                      />\n                  </Grid>\n                </Grid >\n                <br>\n                </br>\n                <Grid>\n                  <Grid>\n                    <Button\n                      type=\"submit\"\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      background-color=\"deepskyblue\"\n                      onClick={this.onSubmit}\n                      >\n                      Sign In\n                    </Button>\n                  </Grid>\n                </Grid>\n                <br>\n                </br>\n                <br>\n                </br>\n                <br>\n                </br>\n                <br>\n                </br>\n                <Grid className=\"extra-tool\"  >\n                  <Grid container justify=\"flex-start\">\n\n                    <Grid item >\n\n                      <Link href=\"http://localhost:3000/signup\" color=\"textPrimary\" >\n                         <font color=\"blue\"><u>Create account</u></font>\n                      </Link>\n\n\n                    </Grid >\n                  </Grid>\n                </Grid>\n                <Grid container justify=\"flex-end\" justify style={{ marginTop: 8, marginBottom: 10 }} className=\"link\" style={{ padding: -1 }}>\n                  <Link href=\"http://localhost:3000/forgotPassword\" color=\"textPrimary\" >\n                      <font color=\"blue\"><u>Forget password?</u></font>\n                  </Link>\n                </Grid>\n                \n                \n              </form>\n            </div>\n          </Container>\n        </Card >\n      </div>\n    );\n  }\n}\n\nexport default signin;","C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\pages\\Reset-Password\\ResetPassword.jsx",["75","76"],"import React, { Component } from \"react\"\nimport \"./ResetPassword.css\"\nimport { Card } from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Button from '@material-ui/core/Button';\nimport { resetPass } from \"../../Services/userServices\"\n\n\nclass ResetPassword extends Component{\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        password1: \"\",\n        password1Error: \"\",\n        password1Flag: false,\n        password2: \"\",\n        password2Error: \"\",\n        password2Flag: false,\n        setOpen: false,\n        open: false,\n        token:this.props.match.params.token, \n        \n    };\n}\n\ntoken=this.props.match.params.token;\n\nchange = (e) => {\n    this.setState({\n        [e.target.name]: e.target.value,\n    });\n};\n\nvalidate = () => {\n    let isError = false;\n    const errors = {\n        password1Error: \"\",\n        password1Flag: false,\n        password2Error: \"\",\n        password2Flag: false,\n    };\n\n    if (this.state.password1.length == 0) {\n        errors.password1Flag = true;\n        \n        isError = true;\n        errors.password1Error = \"Enter Password\";\n    }\n\n    if (this.state.password2 != this.state.password1 ) {\n        errors.password2Flag = true;\n        isError = true;\n        errors.password2Error = \"Passwords didn't match.\";\n    }\n\n    this.setState({\n        ...errors,\n    });\n\n    return isError;\n};\n\n\nonSubmit = (event) => {\n    event.preventDefault();\n    const err = this.validate();\n    if (!err) {\n        this.setState({\n            password1: \"\",\n            password1Error: \"\",\n            password1Flag: false,\n            password2: \"\",\n            password2Error: \"\",\n            password2Flag: false,\n            \n        });\n\n        let resetPasswordData = {\n\n            newPass: this.state.password1,\n\n        };\n        console.log(this.state.token)\n        console.log(resetPasswordData)\n        \n        resetPass (resetPasswordData, this.state.token).then((data)=>{\n          console.log(JSON.stringify(data));\n        \n\n        })\n        .catch ((error)=>{\n          console.log(error)\n         \n        })\n    }\n};\n\n    \n\n   \n\n    render(){\n        \n        return(\n            <div className=\"wrapper-tool\">\n                <Card id='form'>\n                <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className=\"paper\">\n                    <br>\n                    </br>\n                    <br>\n                    </br>\n                <Typography component=\"h1\" variant=\"h5\" className=\"fundooShift\">\n                   <span style={{ color: \"#0606f8\"}}>F</span>\n                   <span style={{ color: \"#d10303\" }}>u</span>\n                   <span style={{ color: \"#f0b000\" }}>n</span>\n                   <span style={{ color: \"#0606f8\" }}>d</span>\n                   <span style={{ color: \"green\" }}>o</span>\n                   <span style={{ color: \"#d10303\" }}>o</span>\n              </Typography>\n              <Typography component=\"h1\" variant=\"h5\" className=\"head\">\n              <span><h6>Resetting the password for </h6></span>\n              </Typography>\n              <form className=\"form\">\n              <Grid>\n              <Grid>\n                  <br>\n                  </br>\n                  <br>\n                  </br>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      id=\"password1\"\n                      label=\"Enter your new password:\"\n                      name=\"password1\"\n                      autoComplete=\"password1\"\n                      value={this.state.password1}\n                      error={this.state.password1Flag}\n                      onChange={(e)=> this.change(e)}\n                      helperText={this.state.password1Error}\n                    />\n                    \n                  </Grid>\n                  \n              </Grid>\n              <br>\n              </br>\n              <Grid>\n              <Grid>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      type=\"text\"\n                      id=\"password2\"\n                      label=\"Enter your confirm password :\"\n                      name=\"password2\"\n                      autoComplete=\"password2\"\n                      value={this.state.password2}\n                      error={this.state.password2Flag}\n                      onChange={(e)=> this.change(e)}\n                      helperText={this.state.password2Error}\n                      \n                     />\n                     \n                </Grid>\n                  \n              </Grid>\n              <br>\n              </br>\n              <Grid>\n                  <Grid>\n                  <Link href=\"\" color=\"textPrimary\" >\n                  <Button \n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\" \n                  color=\"primary\"\n                  onClick={this.onSubmit}>\n                      Submit\n                  </Button>\n                  </Link>\n                  </Grid>\n                </Grid>\n              </form>\n                </div>\n                </Container>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default ResetPassword;","C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\pages\\Forgot-Password\\forgotPassword.jsx",["77","78","79","80","81"],"import React, { Component } from \"react\"\nimport \"./forgotPassword.css\"\nimport { Card } from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport { forgotPass } from \"../../Services/userServices\"\n\nclass forgotPassword extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n          email: \"\",\n          forgetMsg: \"\",\n\n          errorValid: {\n            email: false,\n          },\n          errors: {\n            email: \"\",\n          },\n        };\n      }\n\n      change = (e) => {\n        this.setState({\n          [e.target.name]: e.target.value,\n        })\n      }\n\n      handleEmailInput = (event) => {\n        event.preventDefault();\n        this.setState({\n          email: event.target.value,\n        });\n        let errors = this.state.errors;\n        let validate = false;\n        const regexValidateEmail = new RegExp(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$$/);\n        if (!regexValidateEmail.test(this.state.email)) {\n          errors.email = \"Email is not valid\";\n          validate = true;\n        } else {\n          errors.email = \"\";\n        }\n        this.setState({\n          errorValid: { email: validate },\n          errors: { email: errors.email },\n        });\n      };\n\n      \n      handleSubmit = (event) =>{\n        event.preventDefault();\n        let errs = {};\n        let formIsValid = true;\n        this.setState({\n          email: \"\",\n        })\n        formIsValid = \"Msg has been send\"\n        const errors = this.state.errors;\n        if( errors.email || this.state.email == \"\" ){\n          this.setState({\n            forgetMsg: true,\n            forgetMsg: \"Enter valid Email ID\"\n          });\n          formIsValid = false;\n          errs[\"email\"] = \"Email ID is required\";\n        }\n\n        let forgotPassData = {\n         \"email\" : this.state.email,\n        }\n        console.log('forgotPassData : ',forgotPassData)\n        forgotPass(forgotPassData).then((data)=>{\n          console.log(data);\n          alert('Reset link has been send to your Email account kindly check')\n        })\n        .catch ((error)=>{\n          console.log(error)\n        })\n          \n        \n      }\n\nrender(){\n    return(\n        <div className=\"wrapper-tool\">\n            <Card id='form'>\n            <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className=\"paper\">\n                <br>\n                </br>\n                <br>\n                </br>\n            <Typography component=\"h1\" variant=\"h5\" className=\"fundooShift\">\n              <span style={{ color: \"#0606f8\"}}>F</span>\n              <span style={{ color: \"#d10303\" }}>u</span>\n              <span style={{ color: \"#f0b000\" }}>n</span>\n              <span style={{ color: \"#0606f8\" }}>d</span>\n              <span style={{ color: \"green\" }}>o</span>\n              <span style={{ color: \"#d10303\" }}>o</span>\n              </Typography>\n              <Typography component=\"h1\" variant=\"h5\" className=\"head\">\n              <span>Find your email</span>\n              </Typography>\n              <Typography component=\"h1\" variant=\"h5\" className=\"head\">\n              <span><h6>Enter your phone number or recovery email</h6></span>\n              </Typography>\n              <form className=\"form\">\n              <Grid>\n              <Grid>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      id=\"emailOrNumber\"\n                      label=\"Enter phone number or email :\"\n                      name=\"email\"\n                      autoComplete=\"email\"\n                      value={this.state.email}\n                      onChange={this.handleEmailInput}\n                      \n                    />\n                  </Grid>\n                  \n              </Grid>\n              <br>\n              </br>\n              <Grid>\n                  <Grid>\n                  <Link href=\"\" color=\"textPrimary\" >\n                  <Button \n                     variant=\"contained\" \n                     color=\"primary\"\n                     onClick={this.handleSubmit}>\n                      Reset password\n                  </Button>\n                  </Link>\n                  </Grid>\n                </Grid>\n              </form>\n\n            </div>\n            </Container>\n            </Card>\n        </div>\n    );\n}\n\n}\nexport default forgotPassword;","C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\pages\\SignUp\\signup.jsx",["82","83","84","85"],"import React, { Component } from \"react\";\nimport \"./signup.css\"\nimport { Card, Container, CssBaseline, Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { registration } from \"../../Services/userServices\"\n\n\n\nclass Signup extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n          firstname: \"\",\n          lastname: \"\",\n          email: \"\",\n          password: \"\",\n          Rpassword: \"\",\n          errorValid: {\n            firstname: false,\n            lastname: false,\n            email: false,\n            password: false,\n            Rpassword: false,\n            showPassword : false,\n          },\n          enable: true,\n          service: \"advance\",\n          errors: {\n            firstname: \"\",\n            lastname: \"\",\n            email: \"\",\n            password: \"\",\n            Rpassword: \"\",\n          },\n        };\n      }\n\n\n    \n      handleFirstNameInput = (event) => {\n        event.preventDefault();\n        this.setState({\n          firstname: event.target.value,\n        });\n        let errors = this.state.errors;\n        let validate = false;\n        const regexvalidatefirstName = new RegExp(/^[A-Z]{1}[a-z]{3,}$/);\n        if (!regexvalidatefirstName.test(this.state.firstname)) {\n          errors.firstname = \"First Name is incorrect\";\n          validate = true;\n        } else {\n          errors.firstname = \"\";\n        }\n        this.setState({\n          errorValid: { firstname: validate },\n          errors: { firstname: errors.firstName },\n        });\n      };\n      \n      handleLastNameInput = (event) => {\n        event.preventDefault();\n        this.setState({\n          lastname: event.target.value,\n        });\n        let errors = this.state.errors;\n        let validate = false;\n        \n        const regexvalidatelastName = new RegExp(/^[A-Z]{1}[a-z]{3,}$/);\n        if (!regexvalidatelastName.test(event.target.value)) {\n          errors.lastname = \"Last Name is incorrect\";\n          validate = true;\n        } else {\n          errors.lastname = \"\";\n        }\n        this.setState({\n          errorValid: { lastname: validate },\n          errors: { lastname: errors.lastname },\n        });\n      };\n    \n       \n\n      handleEmailInput = (event) => {\n        event.preventDefault();\n        this.setState({\n          email: event.target.value,\n        });\n        let errors = this.state.errors;\n        let validate = false;\n        const regexValidateEmail = new RegExp(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$$/);\n        if (!regexValidateEmail.test(event.target.value)) {\n          errors.email = \"Email is not according to the syntx\";\n          validate = true;\n        } else {\n          errors.email = \"\";\n        }\n        this.setState({\n          errorValid: { email: validate },\n          errors: { email: errors.email },\n        });\n      };\n\n      handlePasswordInput = (event) => {\n        event.preventDefault();\n        this.setState({\n          hidePassword: true,\n          password: event.target.value,\n          icEye: 'visibility-off',\n        });\n        let errors = this.state.errors;\n        let validate = false;\n        const regexvalidatePassword = new RegExp(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/);\n        if (!regexvalidatePassword.test(event.target.value)) {\n          errors.password =\n            \"Password is not valid\";\n          validate = true;\n        } else {\n          errors.password = \"\";\n        }\n        this.setState({\n          errorValid: { password: validate },\n          errors: { password: errors.password },\n        });\n      };\n      \n      \n      handleReapetPasswordInput = (event) => {\n        event.preventDefault();\n        this.setState({\n          hidePassword: true,\n          Rpassword: event.target.value,\n          icEye: 'visibility-off',\n        });\n        let errors = this.state.errors;\n        let validate = false;\n        if (this.state.password !== this.state.Rpassword) {\n    \n          errors.Rpassword =\n            \"\";\n          validate = true;\n    \n        } else if (this.state.password === this.state.Rpassword) {\n          errors.Rpassword = true;\n        }\n        this.setState({\n    \n          errorValid: { Rpassword: validate },\n          errors: { Rpassword: errors.Rpassword },\n        });\n       \n      };\n    \n    handleSubmit =(event) =>{\n      event.preventDefault();\n        if( this.state.firstname === \"\" && this.state.lastname === \"\" && this.state.email === \"\" && this.state.password === \"\" ){\n        this.setState({\n                 errorValid: {\n                   email: true,\n                   password: true,\n                   firstName: true,\n                   lastName: true,\n                 },\n                 errors: {\n                   email: \"email field shoul not be empty\",\n                   password: \"password field should not be empty\",\n                   firstName: \"firstname field should not be empty\",\n                   lastName: \"lastname field should not be empty\",\n                 },\n               });\n        }\n\n        if (this.state.email !== \"\" && \n          this.state.password !== \"\" && this.state.lastName !== \"\" \n          && this.state.firstName !== \"\") {\n           \n            let userData = {\n              firstname: this.state.firstname,\n              lastname: this.state.lastname,\n              email: this.state.email,\n              password: this.state.password,\n            }\n\n            console.log('userData : ',userData)\n            registration (userData).then((data)=>{\n              console.log(data);\n              \n            })\n            .catch ((error)=>{\n              console.log(error)\n            })\n\n        }\n\n\n       \n     }\n      \n      render() {\n        return (\n          <div className=\"inline-wrapper\">\n            <Card id='card'>\n              <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className=\"inline-paper\">\n                <br>\n                </br>  \n            <Typography className=\"app_name\" variant=\"h5\" color=\"textSecondary\">\n                  <span style={{ color: \"#0606f8\" }}>F</span>\n                  <span style={{ color: \"#d10303\" }}>u</span>\n                  <span style={{ color: \"#f0b000\" }}>n</span>\n                  <span style={{ color: \"#0606f8\" }}>d</span>\n                  <span style={{ color: \"green\" }}>o</span>\n                  <span style={{ color: \"#d10303\" }}>o</span>\n            </Typography>\n              <br>\n              </br>\n            <Typography component=\"h1\" variant=\"h5\" className=\"header\">\n                  <div className=\"header-content\">\n                    <font color=\"blue\">Sign up</font>\n                  </div>\n            </Typography>\n              <br>\n              </br>\n                  <form className=\"form\">\n                    <div className=\"address\">\n                      <Grid container spacing={2}>\n    \n                        <Grid item xs={12} sm={6} style={{ marginTop: 3, marginBottom: 3 , marginRight:-20 , marginLeft: -5}}>\n                          <div  className=\"name\">\n                            <div className=\"first-Name\">\n                            <TextField\n                             height=\"100\"\n                              autoComplete=\"fname\"\n                              name=\"firstname\"\n                              variant=\"outlined\"\n                              required\n                              fullWidth\n                              id=\"firstname\"\n                              label=\"First Name\"\n                              \n                              value={this.state.firstname}\n                              error={this.state.errorValid.firstname}\n                              onChange={this.handleFirstNameInput}\n                              helperText={this.state.errors[\"firstname\"]}\n                             \n                            />\n                            </div>\n                          </div>\n                        </Grid>\n                        <Grid  item xs={12} sm={6} style={{ marginTop: 2, marginBottom: 3 ,marginLeft:20 , marginRight:-30}}>\n                          <div  className=\"last-name\">\n                          <div  className=\"first-Name\">\n                            <TextField\n                             height=\"8\"\n                              variant=\"outlined\"\n                              required\n                              fullWidth\n                              id=\"lastname\"\n                              label=\"Last Name\"\n                              name=\"lastname\"\n                              \n                              value={this.state.lastname}\n                              error={this.state.errorValid.lastname}\n                              onChange={this.handleLastNameInput}\n                              helperText={this.state.errors[\"lastname\"]}\n                             \n                            />\n                            </div>\n                          </div>\n                        </Grid>\n                        <Grid item xs={12}  >\n                          <Grid style={{ marginTop: 25, marginBottom: 3 ,marginLeft:-3}} >\n                            <div className=\"email-address\">\n                              <div className=\"first-Name\" >\n                              <TextField\n                               height=\"8\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                value={this.state.email}\n                                error={this.state.errorValid.email}\n                                onChange={this.handleEmailInput}\n                                helperText={this.state.errors[\"email\"]}\n                               \n                              />\n                              </div>\n                            </div>\n                          </Grid>\n                        </Grid>\n    \n    \n                        <Grid item xs={12} >\n                          <Grid  style={{ marginTop: 25, marginBottom: 3 ,marginLeft:-3 ,height:5}}>\n                            <div  className=\"passwrord-Id\">\n                              <div className=\"first-Name\">\n                              <TextField\n                                height=\"8\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"password\"\n                                label=\"password\"\n                                name=\"password\"\n                                autoComplete=\"current-password\"\n                                value={this.state.password}\n                                error={this.state.errorValid.password}\n                                onChange={this.handlePasswordInput}\n                                helperText={this.state.errors[\"password\"]}\n                                type={this.state.showPassword ? 'text' : 'password'}\n                                \n                               />\n \n                              </div>\n    \n                            </div>\n                          </Grid>\n                        </Grid>\n    \n                        <Grid item xs={12}  >\n                          <Grid style={{ marginTop: 55, marginBottom: 3 , marginLeft:-3 }}>\n                          <div className=\"passwrord-Id\">\n                              <div  className=\"first-Name\">\n                              <TextField\n                                height=\"8\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"rpassword\"\n                                label=\"confirm Password\"\n                                type=\"rpassword\"\n                                id=\"rpassword\"\n                                autoComplete=\"current-password\"\n                                error={this.state.errorValid.Rpassword}\n                                onChange={this.handleReapetPasswordInput}\n                                helperText={this.state.errors[\"Rpassword\"]}\n                                type=\"text\"\n                                type={this.state.showPassword ? 'text' : 'password'}\n                            \n                              />\n                              </div>\n                              \n                            </div>\n                          </Grid>\n                        </Grid>\n    \n                      </Grid >\n                       \n                      <div className=\"createAccount\">\n                      <Grid  style={{ marginTop: 45, marginLeft: -1  }}>\n                        <div className=\"Button\">\n                        <Button\n                          type=\"submit\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"secondary\"\n                          onClick={this.handleSubmit}\n                        >\n                          Sign Up\n                    </Button>\n                    </div>\n                    </Grid>\n                    <br>\n                    </br>\n                    <Grid container justify=\"flex-end\">\n                        <div className=\"forgot-password \">\n                          <p align=\"left\">\n                            Already registered?<a href=\"http://localhost:3000/signin/\">  Sign in</a>\n                          </p>\n                        </div>\n                    </Grid>    \n    \n                      </div>\n                    </div>\n                  </form>\n                </div>\n                <Box mt={2}>\n    \n                </Box>\n              </Container>\n            </Card >\n          </div>\n        );\n      }\n}\n\n\n\nexport default Signup;","C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\components\\DashBoard\\DashBoard.jsx",[],"C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\Services\\userServices.js",[],"C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\components\\addNote\\addNote.jsx",["86","87","88","89","90","91","92","93","94","95","96"],"C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\components\\Notes\\notes.jsx",["97"],"import React from 'react'\nimport AddNote from '../addNote/addNote'\nimport DisplayNote from '../DisplayNotes/DisplayNote'\nimport { getNotes } from '../../Services/userServices'\n\nexport default function Notes(props){\n    \n    var [note, setNote] = React.useState([]);\n    \n    React.useEffect(()=>{\n        displaynotes();\n    }, []);\n\n    const displaynotes = () => {\n        getNotes().then(data=>{\n            console.log('data in notes : ',data.data.data)\n            setNote(data.data.data)\n            console.log('note : ',note);\n        }).catch(err=>{\n            console.log('err : ',err);\n        })\n    }\n\n    return(\n        <div className=\"mainContent\">\n          <AddNote getNoteUpdate={displaynotes} /> \n          <DisplayNote notes={note} />   \n        </div>\n    )\n}","C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\components\\AppBar\\AppBar.jsx",[],"C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\components\\DisplayNotes\\DisplayNote.jsx",[],"C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\components\\DisplayIcons\\DisplayIcons.jsx",["98"],"C:\\Users\\HP HP\\Downloads\\fundooNotes-frondend-master\\fundooNotes-frondend-master\\src\\components\\SideBar\\SideBar.jsx",["99","100"],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":8,"column":8,"nodeType":"107","messageId":"108","endLine":8,"endColumn":11},{"ruleId":"109","severity":1,"message":"110","line":43,"column":33,"nodeType":"111","messageId":"112","endLine":43,"endColumn":35},{"ruleId":"109","severity":1,"message":"110","line":53,"column":36,"nodeType":"111","messageId":"112","endLine":53,"endColumn":38},{"ruleId":"113","severity":1,"message":"114","line":197,"column":52,"nodeType":"115","endLine":197,"endColumn":59},{"ruleId":"113","severity":1,"message":"114","line":197,"column":120,"nodeType":"115","endLine":197,"endColumn":143},{"ruleId":"109","severity":1,"message":"110","line":50,"column":37,"nodeType":"111","messageId":"112","endLine":50,"endColumn":39},{"ruleId":"109","severity":1,"message":"116","line":57,"column":30,"nodeType":"111","messageId":"112","endLine":57,"endColumn":32},{"ruleId":"117","severity":1,"message":"118","line":42,"column":54,"nodeType":"119","messageId":"120","endLine":42,"endColumn":55,"suggestions":"121"},{"ruleId":"117","severity":1,"message":"118","line":42,"column":70,"nodeType":"119","messageId":"120","endLine":42,"endColumn":71,"suggestions":"122"},{"ruleId":"109","severity":1,"message":"110","line":65,"column":46,"nodeType":"111","messageId":"112","endLine":65,"endColumn":48},{"ruleId":"123","severity":1,"message":"124","line":68,"column":13,"nodeType":"125","messageId":"112","endLine":68,"endColumn":22},{"ruleId":"105","severity":1,"message":"126","line":70,"column":11,"nodeType":"107","messageId":"108","endLine":70,"endColumn":22},{"ruleId":"117","severity":1,"message":"118","line":93,"column":54,"nodeType":"119","messageId":"120","endLine":93,"endColumn":55,"suggestions":"127"},{"ruleId":"117","severity":1,"message":"118","line":93,"column":70,"nodeType":"119","messageId":"120","endLine":93,"endColumn":71,"suggestions":"128"},{"ruleId":"113","severity":1,"message":"114","line":343,"column":33,"nodeType":"115","endLine":343,"endColumn":44},{"ruleId":"113","severity":1,"message":"114","line":344,"column":33,"nodeType":"115","endLine":344,"endColumn":85},{"ruleId":"105","severity":1,"message":"129","line":17,"column":10,"nodeType":"107","messageId":"108","endLine":17,"endColumn":19},{"ruleId":"105","severity":1,"message":"130","line":18,"column":10,"nodeType":"107","messageId":"108","endLine":18,"endColumn":14},{"ruleId":"105","severity":1,"message":"131","line":18,"column":16,"nodeType":"107","messageId":"108","endLine":18,"endColumn":23},{"ruleId":"105","severity":1,"message":"132","line":19,"column":18,"nodeType":"107","messageId":"108","endLine":19,"endColumn":27},{"ruleId":"105","severity":1,"message":"133","line":22,"column":17,"nodeType":"107","messageId":"108","endLine":22,"endColumn":25},{"ruleId":"105","severity":1,"message":"134","line":23,"column":10,"nodeType":"107","messageId":"108","endLine":23,"endColumn":13},{"ruleId":"105","severity":1,"message":"135","line":23,"column":15,"nodeType":"107","messageId":"108","endLine":23,"endColumn":21},{"ruleId":"109","severity":1,"message":"110","line":28,"column":17,"nodeType":"111","messageId":"112","endLine":28,"endColumn":19},{"ruleId":"109","severity":1,"message":"110","line":28,"column":45,"nodeType":"111","messageId":"112","endLine":28,"endColumn":47},{"ruleId":"109","severity":1,"message":"110","line":65,"column":21,"nodeType":"111","messageId":"112","endLine":65,"endColumn":23},{"ruleId":"109","severity":1,"message":"110","line":68,"column":28,"nodeType":"111","messageId":"112","endLine":68,"endColumn":30},{"ruleId":"136","severity":1,"message":"137","line":12,"column":8,"nodeType":"138","endLine":12,"endColumn":10,"suggestions":"139"},{"ruleId":"105","severity":1,"message":"132","line":17,"column":20,"nodeType":"107","messageId":"108","endLine":17,"endColumn":29},{"ruleId":"140","severity":1,"message":"141","line":82,"column":11,"nodeType":"142","messageId":"112","endLine":82,"endColumn":13},{"ruleId":"113","severity":1,"message":"114","line":91,"column":17,"nodeType":"115","endLine":91,"endColumn":30},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Expected '!==' and instead saw '!='.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["145","146"],["147","148"],"no-dupe-keys","Duplicate key 'forgetMsg'.","ObjectExpression","'formIsValid' is assigned a value but never used.",["149","150"],["151","152"],"'showTitle' is assigned a value but never used.","'edit' is assigned a value but never used.","'setEdit' is assigned a value but never used.","'setNoteId' is assigned a value but never used.","'setTrash' is assigned a value but never used.","'clr' is assigned a value but never used.","'setClr' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'displaynotes'. Either include it or remove the dependency array.","ArrayExpression",["153"],"no-empty-pattern","Unexpected empty array pattern.","ArrayPattern","no-global-assign","no-unsafe-negation",{"messageId":"154","fix":"155","desc":"156"},{"messageId":"157","fix":"158","desc":"159"},{"messageId":"154","fix":"160","desc":"156"},{"messageId":"157","fix":"161","desc":"159"},{"messageId":"154","fix":"162","desc":"156"},{"messageId":"157","fix":"163","desc":"159"},{"messageId":"154","fix":"164","desc":"156"},{"messageId":"157","fix":"165","desc":"159"},{"desc":"166","fix":"167"},"removeEscape",{"range":"168","text":"169"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"170","text":"171"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"172","text":"169"},{"range":"173","text":"171"},{"range":"174","text":"169"},{"range":"175","text":"171"},{"range":"176","text":"169"},{"range":"177","text":"171"},"Update the dependencies array to be: [displaynotes]",{"range":"178","text":"179"},[1195,1196],"",[1195,1195],"\\",[1211,1212],[1211,1211],[2644,2645],[2644,2644],[2660,2661],[2660,2660],[328,330],"[displaynotes]"]